// This file automatically generated by MOKO KSwift (https://github.com/icerockdev/moko-kswift)
//
import Foundation
import MultiPlatformLibrary

/**
 * selector: ClassContext/dev.icerock.moko:resources/dev/icerock/moko/resources/ColorResource */
public enum ColorResourceKs {

  case single(ColorResource.Single)
  case themed(ColorResource.Themed)

  public init(_ obj: ColorResource) {
    if let obj = obj as? MultiPlatformLibrary.ColorResource.Single {
      self = .single(obj)
    } else if let obj = obj as? MultiPlatformLibrary.ColorResource.Themed {
      self = .themed(obj)
    } else {
      fatalError("ColorResourceKs not syncronized with ColorResource class")
    }
  }

}

public extension Foundation.Bundle {
  /**
   * selector: PackageFunctionContext/dev.icerock.moko:resources/dev.icerock.moko.resources.utils/Class(name=platform/Foundation/NSBundle.Companion)/loadableBundle/identifier:Class(name=kotlin/String)
   */
  @discardableResult
  public class func loadableBundle(identifier: String) -> Bundle {
    return NSBundleExtKt.loadableBundle(self, identifier: identifier)
  }
}

/**
 * selector: ClassContext/dev.icerock.moko:resources/dev/icerock/moko/resources/desc/StringDesc.LocaleType */
public enum StringDescLocaleTypeKs {

  case system
  case custom(StringDescLocaleType.Custom)

  public init(_ obj: StringDescLocaleType) {
    if obj is MultiPlatformLibrary.StringDescLocaleType.System {
      self = .system
    } else if let obj = obj as? MultiPlatformLibrary.StringDescLocaleType.Custom {
      self = .custom(obj)
    } else {
      fatalError("StringDescLocaleTypeKs not syncronized with StringDescLocaleType class")
    }
  }

}

public extension Swift.String {
  /**
   * selector: PackageFunctionContext/dev.icerock.moko:resources/dev.icerock.moko.resources.desc/Class(name=kotlin/String)/desc/
   */
  @discardableResult
  public func desc() -> RawStringDesc {
    return StringDescKt.desc(self)
  }
}

public extension MultiPlatformLibrary.StringDesc {
  /**
   * selector: PackageFunctionContext/dev.icerock.moko:resources/dev.icerock.moko.resources.desc/Class(name=dev/icerock/moko/resources/desc/StringDesc)/plus/other:Class(name=dev/icerock/moko/resources/desc/StringDesc)
   */
  @discardableResult
  public func plus(other: StringDesc) -> StringDesc {
    return StringDescKt.plus(self, other: other)
  }
}

public extension Swift.String {
  /**
   * selector: PackageFunctionContext/dev.icerock.moko:resources/dev.icerock.moko.resources.desc.image/Class(name=kotlin/String)/asImageUrl/
   */
  @discardableResult
  public func asImageUrl() -> ImageDesc {
    return ImageDescUrlKt.asImageUrl(self)
  }
}
